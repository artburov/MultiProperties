package tests;

import config.WebDriverConfig;
import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import org.aeonbits.owner.ConfigFactory;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

import static io.qameta.allure.Allure.step;


public class GoogleOpenTests {
    private WebDriver driver;

    @BeforeEach
    void initDriver() throws Exception {
        WebDriverConfig config = ConfigFactory.create(WebDriverConfig.class, System.getProperties());
        //Remote run on Selenoid by default
        initRemoteBrowser(config);
    }

    @Test
    @Owner("aburov")
    @Feature("Simple Google opener")
    @DisplayName("Open Google")
    void checkGoogleSearchResult() {
        step("Open https://google.com/", () ->
                driver.get("https://www.google.com/"));
        Assertions.assertEquals("Google", driver.getTitle());
        driver.quit();
    }

    public void initRemoteBrowser(WebDriverConfig config) {
        if (config.isRemote()) {
            DesiredCapabilities capabilities;
            switch (config.getBrowser()) {
                case CHROME: {
                    capabilities = DesiredCapabilities.chrome();
                    break;
                }
                case FIREFOX: {
                    capabilities = DesiredCapabilities.firefox();
                    break;
                }
                case OPERA: {
                    capabilities = DesiredCapabilities.opera();
                    break;
                }
                default: {
                    capabilities = DesiredCapabilities.chrome();
                }
            }
            driver = new RemoteWebDriver(config.getURL(), capabilities);
        } else {
            driver = new ChromeDriver();
        }
    }
}